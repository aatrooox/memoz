name: Gitea Actions Demo
run-name: ${{ gitea.actor }} is testing out Gitea Actions  
on: 
  push:
    branches: 
      - main
jobs:
  Explore-Gitea-Actions:
    runs-on: debian
    if: "!contains(github.event.head_commit.message, 'no-ci') && !contains(github.event.head_commit.message, 'skip-ci')"
    steps:
      - run: echo "  The job was automatically triggered by a ${{ gitea.event_name }} event."
      - run: echo "  This job is now running on a ${{ runner.os }} server hosted by Gitea!"
      - run: echo "  The name of your branch is ${{ gitea.ref }} and your repository is ${{ gitea.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Build Project
        env: 
          CONTENT_REPO_TOKEN: ${{ vars.CONTENT_REPO_TOKEN }}
          NUXT_COS_SECRET_ID: ${{ vars.NUXT_COS_SECRET_ID }}
          NUXT_COS_SECRET_KEY: ${{ vars.NUXT_COS_SECRET_KEY }}
          NUXT_COS_BUCKET: ${{ vars.NUXT_COS_BUCKET }}
          NUXT_COS_REGION: ${{ vars.NUXT_COS_REGION }}
          NUXT_JWT_SECRET: ${{ vars.NUXT_JWT_SECRET }}
          DATABASE_URL: ${{ vars.DATABASE_URL }}
        run: npm run build
      - name: Copy and Build
        env: 
          DATABASE_URL: ${{ vars.DATABASE_URL }}
        run: |
          rm -rf /root/web/memo/*
          mkdir -p /root/web/memo/prisma
          cp -R .output/* /root/web/memo/
          cp -R prisma/* /root/web/memo/prisma/
          cp -R ecosystem.config.cjs /root/web/memo/ecosystem.config.cjs
          cd /root/web/memo
          pm2 stop ecosystem.config.cjs
          prisma migrate deploy
          pm2 start ecosystem.config.cjs
      - run: echo "  The ${{ gitea.repository }} repository has been cloned to the runner."
      - run: echo " Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ gitea.workspace }}          
      - run: echo "  This job's status is ${{ job.status }}."